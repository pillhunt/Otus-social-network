services:
#snhw_nginx
  # snhw_nginx:
  #   image: nginx:alpine
  #   container_name: snhw_nginx
  #   ports:
  #     - 8080:80/tcp
  #   volumes:
  #     - snhw_nginx://usr/share/nginx/html:ro
  #     - ./nginx/nginx.conf://etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - snhw_api
  #   networks:
  #     - snhw_network
#snhw_redis
  snhw_redis:
    image: redis:latest
    container_name: snhw_redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6380:6379"
    volumes:
      - ./redis:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      sh -c 'mkdir -p /usr/local/etc/redis &&
      echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
      echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
      echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
      echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
      echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
      echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
      redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl'
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - snhw_network
#snhw_db_master
  snhw_db_master:
    image: postgres:alpine
    container_name: snhw_db_master
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    # command: >
    #   sh -c 'docker-compose -p citus up'
    volumes:
      - snhw_pgdata:/var/lib/postgresql/data
      # - ./docker/pg_master/postgresql_master.conf://var/lib/postgresql/data/postgresql.conf:rw
      # - ./docker/pg_master/pg_hba.conf://var/lib/postgresql/data/pg_hba.conf:rw
      - ./sql_init_scripts:/docker-entrypoint-initdb.d
      - ./sql_init_data/people.csv:/people.csv
      - ./sql_init_data/user_contacts.csv:/user_contacts.csv
      - ./sql_init_data/user_posts.csv:/user_posts.csv
    ports:
      - 5432:5432
    networks:
      - snhw_network
#snhw_db_slave_1
  # snhw_db_slave_1:
  #   image: postgres:alpine
  #   container_name: snhw_db_slave_1
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=snhwdb
  #     - POSTGRES_DB=snhwdb
  #     - POSTGRES_PASSWORD=pass
  #   volumes:
  #     - ./docker/pg_slave_1/backup/:/var/lib/postgresql/data/
  #     #- snhw_pgdata_slave_1:/var/lib/postgresql/data
  #   ports:
  #     - 5433:5432
  #   networks:
  #     - snhw_network
#snhw_db_slave_2
  # snhw_db_slave_2:
  #   image: postgres:alpine
  #   container_name: snhw_db_slave_2
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=snhwdb
  #     - POSTGRES_DB=snhwdb
  #     - POSTGRES_PASSWORD=pass
  #   volumes:
  #     - ./docker/pg_slave_2/backup:/var/lib/postgresql/data
  #     #- snhw_pgdata_slave_2:/var/lib/postgresql/data
  #   ports:
  #     - 5434:5432
  #   networks:
  #     - snhw_network
#snhw_db_standalone
  # snhw_db_standalone:
  #   image: postgres:alpine
  #   container_name: snhw_db_standalone
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=snhwdb
  #     - POSTGRES_DB=snhwdb
  #     - POSTGRES_PASSWORD=pass
  #   volumes:
  #     - snhw_pgdata_standalone:/var/lib/postgresql/data
  #     - ./sql_init_scripts:/docker-entrypoint-initdb.d
  #   ports:
  #     - 5435:5432
  #   networks:
  #     - snhw_network
#snhw_pgadmin
  snhw_pgadmin:
    image: dpage/pgadmin4:latest
    container_name: snhw_pgadmin
    restart: unless-stopped
    ports:
      - 5454:80
    depends_on:
      - snhw_db_master
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    volumes:
      - snhw_pgadmindata:/var/lib/pgadmin
    networks:
      - snhw_network
#snhw_api
  snhw_api:
    container_name: snhw_api
    build:
      context: .
      dockerfile: ./snhw_api/Dockerfile
    ports:
      - 5054:8080
    depends_on:
      - snhw_db_master
    restart: unless-stopped
    links:
      - snhw_db_master
      - snhw_redis
    networks:
      - snhw_network
#snhw_client
  # snhw_client:
  #   container_name: snhw_client
  #   build:
  #     context: ./
  #     dockerfile: ./snhw_client/Dockerfile
  #   working_dir: /srv/snhw_client
  #   volumes:
  #     - ./snhw_client:/srv/snhw_client
  #     - /srv/snhw_client/node_modules
  #   stdin_open: true
  #   environment:
  #     - HOST=0.0.0.0
  #     - CHOKIDAR_USEPOLLING=true
  #   ports:
  #     - 8082:8080
  #   networks:
  #     - snhw_network
#snhw_influxdb
  # snhw_influxdb:
  #   image: influxdb:alpine
  #   ports:
  #     - 8086:8086
  #   container_name: snhw_influxdb
  #   security_opt:
  #       - no-new-privileges:true
  #   restart: unless-stopped
  #   volumes:
  #     - snhw_influxdbdata:/var/lib/influxdb2:rw
  #   networks:
  #     - snhw_network
#snhw_telegraf
  # snhw_telegraf:
  #   image: telegraf:alpine
  #   container_name: snhw_telegraf
  #   user: root
  #   entrypoint: "telegraf"
  #   restart: unless-stopped
  #   ports:
  #     - 8125:8125
  #   volumes:
  #     - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   depends_on:
  #     - snhw_influxdb
  #   networks:
  #     - snhw_network
#snhw_grafana
  # snhw_grafana:
  #   image: grafana/grafana-oss
  #   restart: unless-stopped
  #   ports:
  #     - 3000:3000
  #   container_name: snhw_grafana
  #   depends_on:
  #     - snhw_influxdb
  #   volumes:
  #     - snhw_grafanadata:/var/lib/grafana:rw
  #   networks:
  #     - snhw_network
  master:
    container_name: "citus_master"
    image: "citusdata/citus:12.1.5"
    ports: 
      - "5433:5432"
    environment:
      POSTGRES_USER: "snhwdb"
      POSTGRES_PASSWORD: "pass"
      PGUSER: "snhwdb"
      PGPASSWORD: "pass"
    networks:
      - snhw_network
  worker:
    image: "citusdata/citus:12.1.5"
    depends_on:
      - manager
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - snhw_network
  manager:
    container_name: "citus_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - healthcheck-volume:/healthcheck
    depends_on: 
      - master
    networks:
      - snhw_network
volumes:
  snhw_nginx:
    name: snhw_nginx
  snhw_pgdata:
    #external: true
    name: snhw_pgdata
  snhw_pgdata_slave_1:
    name: snhw_pgdata_slave_1
  snhw_pgdata_slave_2:
    name: snhw_pgdata_slave_2
  snhw_pgdata_standalone:
    name: snhw_pgdata_standalone
  snhw_apidata:
    name: snhw_apidata
  snhw_pgadmindata:
    name: snhw_pgadmindata
  snhw_grafanadata:
    name: snhw_grafanadata
  snhw_influxdbdata:
    name: snhw_influxdbdata
  healthcheck-volume:
networks:
  snhw_network:
    name: snhw_network
    driver: bridge