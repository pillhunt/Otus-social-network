services:
#snhw_nginx
  snhw_nginx:
    image: nginx:alpine
    container_name: snhw_nginx
    ports:
      - 8080:80/tcp
    volumes:
      - snhw_nginx://usr/share/nginx/html:ro
      - ./nginx/nginx.conf://etc/nginx/nginx.conf:ro
    depends_on:
      - snhw_api
    networks:
      - snhw_network
#snhw_db_master
  snhw_db_master:
    image: postgres:alpine
    container_name: snhw_db_master
    restart: unless-stopped
    environment:
      - POSTGRES_USER=snhwdb
      - POSTGRES_DB=snhwdb
      - POSTGRES_PASSWORD=pass
    volumes:
      - snhw_pgdata:/var/lib/postgresql/data
      # - ./docker/pg_master/postgresql_master.conf://var/lib/postgresql/data/postgresql.conf:rw
      # - ./docker/pg_master/pg_hba.conf://var/lib/postgresql/data/pg_hba.conf:rw
      - ./sql_init_scripts:/docker-entrypoint-initdb.d
      - ./sql_init_data/people.csv:/people.csv
    ports:
      - 5432:5432
    networks:
      - snhw_network
#snhw_db_slave_1
  # snhw_db_slave_1:
  #   image: postgres:alpine
  #   container_name: snhw_db_slave_1
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=snhwdb
  #     - POSTGRES_DB=snhwdb
  #     - POSTGRES_PASSWORD=pass
  #   volumes:
  #     - ./docker/pg_slave_1/backup/:/var/lib/postgresql/data/
  #     #- snhw_pgdata_slave_1:/var/lib/postgresql/data
  #   ports:
  #     - 5433:5432
  #   networks:
  #     - snhw_network
#snhw_db_slave_2
  # snhw_db_slave_2:
  #   image: postgres:alpine
  #   container_name: snhw_db_slave_2
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=snhwdb
  #     - POSTGRES_DB=snhwdb
  #     - POSTGRES_PASSWORD=pass
  #   volumes:
  #     - ./docker/pg_slave_2/backup:/var/lib/postgresql/data
  #     #- snhw_pgdata_slave_2:/var/lib/postgresql/data
  #   ports:
  #     - 5434:5432
  #   networks:
  #     - snhw_network
#snhw_db_standalone
  # snhw_db_standalone:
  #   image: postgres:alpine
  #   container_name: snhw_db_standalone
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=snhwdb
  #     - POSTGRES_DB=snhwdb
  #     - POSTGRES_PASSWORD=pass
  #   volumes:
  #     - snhw_pgdata_standalone:/var/lib/postgresql/data
  #     - ./sql_init_scripts:/docker-entrypoint-initdb.d
  #   ports:
  #     - 5435:5432
  #   networks:
  #     - snhw_network
#snhw_pgadmin
  snhw_pgadmin:
    image: dpage/pgadmin4:latest
    container_name: snhw_pgadmin
    restart: unless-stopped
    ports:
      - 5454:80
    depends_on:
      - snhw_db_master
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@user.com
      - PGADMIN_DEFAULT_PASSWORD=pass
      - PGADMIN_LISTEN_PORT=80
    volumes:
      - snhw_pgadmindata:/var/lib/pgadmin
    networks:
      - snhw_network
#snhw_api
  snhw_api:
    container_name: snhw_api
    build:
      context: .
      dockerfile: ./snhw_api/Dockerfile
    ports:
      - 5054:8080
    depends_on:
      - snhw_db_master
    restart: unless-stopped
    links:
      - snhw_db_master
    environment:
      - ASPNETCORE_CONNECTIONSTRINGS__DEFAULT=User ID=snhwdb;Password=pass;Database=snhwdb;Host=snhw_db_master;Port=5432;
    networks:
      - snhw_network
#snhw_client
  snhw_client:
    container_name: snhw_client
    build:
      context: ./
      dockerfile: ./snhw_client/Dockerfile
    working_dir: /srv/snhw_client
    volumes:
      - ./snhw_client:/srv/snhw_client
      - /srv/snhw_client/node_modules
    stdin_open: true
    environment:
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 8082:8080
    networks:
      - snhw_network
#snhw_influxdb
  snhw_influxdb:
    image: influxdb:alpine
    ports:
      - 8086:8086
    container_name: snhw_influxdb
    security_opt:
        - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - snhw_influxdbdata:/var/lib/influxdb2:rw
    networks:
      - snhw_network
#snhw_telegraf
  snhw_telegraf:
    image: telegraf:alpine
    container_name: snhw_telegraf
    user: root
    entrypoint: "telegraf"
    restart: unless-stopped
    ports:
      - 8125:8125
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - snhw_influxdb
    networks:
      - snhw_network
#snhw_grafana
  snhw_grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    ports:
      - 3000:3000
    container_name: snhw_grafana
    depends_on:
      - snhw_influxdb
    volumes:
      - snhw_grafanadata:/var/lib/grafana:rw
    networks:
      - snhw_network
volumes:
  snhw_nginx:
    name: snhw_nginx
  snhw_pgdata:
    #external: true
    name: snhw_pgdata
  snhw_pgdata_slave_1:
    name: snhw_pgdata_slave_1
  snhw_pgdata_slave_2:
    name: snhw_pgdata_slave_2
  snhw_pgdata_standalone:
    name: snhw_pgdata_standalone
  snhw_apidata:
    name: snhw_apidata
  snhw_pgadmindata:
    #external: true
    name: snhw_pgadmindata
  snhw_grafanadata:
    #external: true
    name: snhw_grafanadata
  snhw_influxdbdata:
    #external: true
    name: snhw_influxdbdata
networks:
  snhw_network:
    name: snhw_network
    driver: bridge