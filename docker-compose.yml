services:
#  snhw_nginx:
#    image: nginx
#    container_name: snhw_nginx
#    ports:
#      - 8080:80
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    depends_on:
#      - snhw_api
#    networks:
#      - snhw_network
  snhw_db_master:
    image: postgres:latest
    container_name: snhw_db_master
    restart: unless-stopped
    environment:
      - POSTGRES_USER=snhwdb
      - POSTGRES_DB=snhwdb
      - POSTGRES_PASSWORD=pass
    volumes:
      - snhw_pgdata:/var/lib/postgresql/data
      - ./Sql_init_scripts:/docker-entrypoint-initdb.d
      - ./Sql_init_data/people.csv:/people.csv
    ports:
      - 5432:5432
    networks:
      - snhw_network
  snhw_db_slave_1:
    image: postgres:latest
    container_name: snhw_db_slave_1
    restart: unless-stopped
    environment:
      - POSTGRES_USER=snhwdb
      - POSTGRES_DB=snhwdb
      - POSTGRES_PASSWORD=pass
    volumes:
      - ./Docker/pg_slave_1/backup:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - snhw_network
  snhw_db_slave_2:
    image: postgres:latest
    container_name: snhw_db_slave_2
    restart: unless-stopped
    environment:
      - POSTGRES_USER=snhwdb
      - POSTGRES_DB=snhwdb
      - POSTGRES_PASSWORD=pass
    volumes:
      - ./Docker/pg_slave_2/backup:/var/lib/postgresql/data
    ports:
      - 5434:5432
    networks:
      - snhw_network
  snhw_db_standalone:
    image: postgres:latest
    container_name: snhw_db_standalone
    restart: unless-stopped
    environment:
      - POSTGRES_USER=snhwdb
      - POSTGRES_DB=snhwdb
      - POSTGRES_PASSWORD=pass
    volumes:
      - snhw_pgdata_standalone:/var/lib/postgresql/data
      - ./Sql_init_scripts:/docker-entrypoint-initdb.d
    ports:
      - 5435:5432
    networks:
      - snhw_network
  snhw_pgadmin:
    image: dpage/pgadmin4:latest
    container_name: snhw_pgadmin
    restart: unless-stopped
    ports:
      - 5454:80/tcp
    depends_on:
      - snhw_db_master
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@user.com
      - PGADMIN_DEFAULT_PASSWORD=pass
      - PGADMIN_LISTEN_PORT=80
    volumes:
      - snhw_pgadmindata:/var/lib/pgadmin
    networks:
      - snhw_network
  snhw_api:
    container_name: snhw_api
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5054:8080
    depends_on:
      - snhw_db_master
    restart: unless-stopped
    links:
      - snhw_db_master
    environment:
      - ASPNETCORE_CONNECTIONSTRINGS__DEFAULT=User ID=snhwdb;Password=pass;Database=snhwdb;Host=snhw_db_slave_1;Port=5432;
    networks:
      - snhw_network
  snhw_influxdb:
    image: influxdb
    ports:
      - 8086:8086
    container_name: snhw_influxdb
    security_opt:
        - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - snhw_influxdbdata:/var/lib/influxdb2:rw
    networks:
      - snhw_network
  snhw_telegraf:
    image: telegraf
    container_name: snhw_telegraf
    user: root
    entrypoint: "telegraf"
    restart: unless-stopped
    ports:
      - 8125:8125
    volumes:
      - ./Telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - snhw_influxdb
    networks:
      - snhw_network
  snhw_grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    ports:
      - 3000:3000
    container_name: snhw_grafana
    depends_on:
      - snhw_influxdb
    volumes:
      - snhw_grafanadata:/var/lib/grafana:rw
    networks:
      - snhw_network
volumes:
  snhw_pgdata:
    name: snhw_pgdata
  snhw_pgdata_slave_1:
    name: snhw_pgdata_slave_1
  snhw_pgdata_slave_2:
    name: snhw_pgdata_slave_2
  snhw_pgdata_standalone:
    name: snhw_pgdata_standalone
  snhw_apidata:
    name: snhw_apidata
  snhw_pgadmindata:
    name: snhw_pgadmindata
  snhw_grafanadata:
    name: snhw_grafanadata
  snhw_influxdbdata:
    name: snhw_influxdbdata
  snhw_prometheusdata:
    name: snhw_prometheusdata
networks:
  snhw_network:
    name: snhw_network
    driver: bridge